Due date: Sunday 9/21/2014 @11:59pm

Objective: Implement a simple instruction set

Assignment: 

Implement a subset of the C16 instruction set in Verilog. Next week, we'll
start working with 16cubed and understand the subtle differences in
implementation.

You also need to embed your own own unit tests in your
design. Please feel free to share unit tests with the class.

- We have no program memory, the program needs to be embedded in your design
  as combinational logic. This impacts build time so keep your programs small

- We have no data memory, let's skip the load and store instructions for this
  assignment. Treat them as noops

- We need to single-step through programs, Let's use KEY0 as a clock.

- You only need to implement and test the following instruction:

    - add (f=0, f=1)
    - slt (f=0; f=1)
    - lea (f=0, f=1)
    - call (f=0, f=1)
    - brz (f=0, f=1)
    - shl (f=0, f=1)   // no mul, both forms are shifts

- We'll pick the most creative tests and use them to test everyone's code

- the hex display depends on the position of the SW[4:0]

    - 0xxx   => show register xxx
    - 1000   => show the current instruction

- LDER[9:0] display the 10 least significant bits of the PC
- LEDG[7:0] display the 8 most significant bits of the current instruction

